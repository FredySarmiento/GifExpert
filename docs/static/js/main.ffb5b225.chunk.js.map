{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAc5C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,SACjBR,GAAc,SAAAS,GAAK,OAAGP,GAAH,mBAAiBO,OACpCN,EAAc,OAMd,4CACA,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0DAE4CC,UAAUH,GAFtD,sDAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,EAAtBJ,GAAuB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAItC,OACI,yBAAKc,UAAU,0CACZ,yBAAKC,IAAKf,EAAKgB,IAAKN,IACnB,2BAAKA,KCLJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAd,GACEY,EAAS,CACLf,KAAKG,EACLU,SAAS,SAG3B,CAAEpB,IAEGqB,EDd0BI,CAAczB,GAAjCa,EAFqB,EAE5BN,KAAea,EAFa,EAEbA,QAItB,OACI,oCACA,4BAAKpB,GACHoB,GAAW,uBAAGJ,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAGHH,EAAOJ,KAAK,SAAAC,GAAG,OACf,kBAAC,EAAD,eACIgB,IAAKhB,EAAIC,IACLD,UEffiB,EAAe,WAAM,MAEMzC,mBAAU,CAAC,cAFjB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAS9B,OACI,oCACI,4CACC,kBAAC,EAAD,CAAaA,cAAgBA,IAC9B,6BACA,4BAEI2C,EAAWnB,KAAI,SAAAT,GAAQ,OAClB,kBAAC,EAAD,CACG0B,IAAK1B,EACLA,SAAUA,U,MChBlC6B,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.ffb5b225.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const hadleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length){\r\n            setCategories(categ=>[inputValue,...categ ])\r\n            setInputValue('')\r\n        }\r\n        //console.log('Submit hecho')\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue} \r\n                onChange={hadleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes ={\r\n    setCategories:PropTypes.func.isRequired\r\n}","export const getGifs = async( category)=>{\r\n    //peticion http en javascript actual\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=VktEg7Up8BjZ4RVV8BD9Il42bcHzt9M3`\r\n    const resp = await fetch (url);\r\n    const {data} =  await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id , title, url} ) => {\r\n    \r\n    //console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n           <img src={url} alt={title}/>\r\n            <p >{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'; \r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data : images, loading} = useFetchGifs( category);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map( img =>(\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                    ))\r\n                }\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(img =>{\r\n                    setState({\r\n                        data:img,\r\n                        loading: false\r\n                    });\r\n            })\r\n    },[ category]);\r\n\r\n    return state;\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    //manejo de arreglos mediante useState\r\n    const [categories, setCategories] = useState (['One punch']);\r\n    \r\n    //const handleAdd = () =>{\r\n    //    /* setCategories([...categories, 'HunteXHunter']) */\r\n    //    setCategories(categ=>[...categ, 'HunterxHunter']);\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            {<AddCategory setCategories ={setCategories}/>}\r\n            <hr />\r\n            <ol>\r\n            {\r\n                categories.map(category =>\r\n                     <GifGrid\r\n                        key={category} \r\n                        category={category} \r\n                     />\r\n                )\r\n            }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}